using System;
using System.Linq;
using System.Runtime.InteropServices;
using ChessChallenge.API;
// using System.Numerics;
// using System.Collections.Generic;

public class MyBot : IChessBot
{
    public Move Think(Board board, Timer timer)
    {
        Move[] moves = board.GetLegalMoves();
        double[] evaluations = new double[moves.Length];
        int moveIndex = 0;
        foreach (var move in moves)
        {
            board.MakeMove(move);

            double[] input = new double[65];
            for (int i = 0; i < 64; i++)
            {
                var piece = board.GetPiece(new Square(i));
                var pieceType = piece.PieceType;
                if (pieceType != PieceType.None)
                {
                    int pieceVal = piece.IsWhite ? (int)pieceType : (int)pieceType * -1;
                    // PlyCount is flipped due to MakeMove
                    if (board.PlyCount % 2 == 0)
                    {
                        pieceVal *= -1;
                    }
                    input[board.PlyCount % 2 != 0 ? i : 63 - i] = pieceVal;
                }
            }
            for (int j = 0; j < 64; j++)
            {
                //Console.WriteLine(input[j]);
            }

            // Input Bias, special case required for Layer function
            input[64] = 1;

            // OVERRIDE TEST INPUT
            input = new double[] { 4, 0, 3, 5, 6, 3, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -4, -2, -3, -5, -6, -3, -2, -4, 1 };

            // Evaluate position
            input = Layer(20, input, new ulong[325] { 3604339907712789993, 12557632914279639812, 12922428609251748642, 2597789546500533039, 12641235300857555574, 12192284067921670657, 3415750810216475768, 3611800488999955552, 3657542202484142192, 3574646821137036027, 12748613333802791449, 12488659604988668287, 3766048089116553256, 3028304881212011310, 2945262444565636440, 12763250459830624988, 12845589088989785295, 12691891721302288048, 3291335717923728747, 3520601074160444742, 3512860939795247699, 3530020287618331667, 12524985976546962580, 12884994224162877674, 12233378302312100068, 12776472967548283398, 12220842753101410484, 12438291963014786236, 2928091579772875316, 3579974867618930884, 12857689817831841460, 12463056132238094542, 3052790373873529626, 3503013455761843281, 3320327541633299147, 12970564004237620026, 11945427470565225515, 3474017027986076626, 3758162935357354007, 12898078043216588806, 12519067050027725287, 12756337705762333667, 3180301924968441396, 12976896869159613202, 2940327617294773243, 12678097141230773441, 12447299059179762289, 3632769428002353566, 12866267490335240649, 3670066668293826624, 12659375574181621782, 12839650336676524749, 12733701574510162715, 1829782753055879929, 11824391323591682253, 12905822318036855008, 2882501229945794847, 3519614204741267157, 3427577629706005964, 12893722250539839612, 12167790219692585464, 11976103426254186701, 12979008337445205022, 11664231555071614022, 12457711522319246197, 12687401283792155677, 12612361876480963265, 3530878168694698484, 2926535803018324442, 3677243432157426225, 12644749694384255529, 11753463651701404676, 2821405743204152348, 2898398703511808974, 3596741290398915654, 12670757905249740295, 12111214245411725890, 3760984052197043670, 12511880399340645838, 12437450879521959161, 12001864884916072911, 12722866892440641637, 12324151624280256692, 3593349951939030141, 12766494817890970929, 12732147133527830641, 2952015977731567435, 3653598574193521279, 2968207656654318401, 12021431018478122021, 3652879682581900497, 11933884808225724475, 11720672158285673049, 11440323165347817566, 12937348479658208549, 12415913535826702656, 2883618301380079509, 3681465397961568628, 2656188130698441738, 12572840775013215466, 12393397356890598447, 11991030668805583229, 12330762317772435870, 3757037643049249907, 12767338027359378451, 3304287576100973832, 12205090257933512961, 12479946488532546400, 3187620703859059018, 12014391558557312229, 12311771299478154106, 12905536519949562895, 12540326326370740965, 3545089146110063376, 12473322663323021044, 12694856485717253353, 2885305063961602566, 12856559711041139286, 3137937295207248179, 2974940425880283507, 12875562909728747865, 3244881667250467525, 11974264990884999246, 12695140084557852883, 3705391893904861754, 12988718221236154884, 3470214792234316510, 12868802963675131486, 2287601270276731200, 2919087962520170540, 12470522159961680949, 12020584052995437038, 2845347050386469342, 12749178407499832465, 3574067161610562671, 12720753616072585780, 3760701061279754307, 3747022123050316567, 12856845362904740720, 3377611835631579013, 12805477721549124361, 12567058204950082625, 12710199124670820549, 3038997999122035145, 3368605939732067371, 3680759375999873986, 3664149440520270609, 2148413002387731167, 2840842269615665287, 12422511303914860524, 12922291889762120757, 3555926643422571030, 12920311089550733677, 3216612664956400370, 12685564047117395965, 3518774091898137231, 3413495673160315442, 3194371698554155731, 12710198388077112583, 2923027780918552042, 3525242143015678148, 12765225657417869353, 12901304055391302344, 11875755035050521481, 12722578977092481835, 12272646799664526099, 3500183306693849769, 11693369111388762278, 3594630079881130869, 12704004179820095243, 11790619503980390899, 3689065851559260768, 3462054380066092054, 3355643838091044937, 12870358547589999810, 12974358043106062539, 2764402097578324232, 12228877666249384117, 3756057611040633565, 12282491184593875041, 12940583468257620577, 12641501940920168529, 12763114275022810197, 3493572892306778302, 12947340727516017552, 3650626693102711841, 12509226592697857090, 12834749130455954448, 3236314145971155143, 3715945303088804522, 3757035341087716132, 3062078382355230292, 3330460842774861361, 3225055153443744578, 11828186148150325680, 12974357944433582991, 12978163431507471476, 3113302773730257256, 12906523424255945182, 3764210322087882957, 12864018243868635756, 3658386618759295708, 12566495010209313577, 12811809568394752135, 12989419389700026891, 2999588676276203960, 3462902238760186280, 3639799260865999330, 12809420679644524028, 3505115247510596349, 12560736427585713106, 3070662394249588732, 12982663869859378240, 3550437673179163322, 11962320500338406108, 3592928772294161034, 3709893339794190247, 2905709813548493903, 3367622379437830918, 3490202545680264152, 12688666110873055297, 12085036883481276766, 3270227502049274522, 3239127824191462215, 12653333910192042630, 1382346527231456253, 3461772780529398430, 12839116276896114837, 3696668134699348545, 3581259882953583973, 3526651519357333768, 12860785632433320166, 12102607816060285287, 12887384891037492519, 12938464170208834235, 3500758458526281766, 3260521842290011440, 12915394949662322970, 2930485246608519617, 11829738280736072676, 3544104986511451685, 2995500251508257564, 3744797128000184886, 3252066570012634899, 12732288583886777460, 12505560485758513413, 3763650387318288501, 3437419931517694281, 3079661926991246179, 3737341331187308208, 11367120859312960572, 12835031009093037394, 3311044704383185926, 3386200189551587617, 3725762857400872328, 3428980172550907116, 11608631180147012370, 12838544953785525684, 3619948735856488872, 12307688578686792499, 12827153534537282096, 12778034823764585913, 3292329515406338055, 12892164886819808380, 12251248740026586524, 3359460509232017642, 3613773745181864091, 3442914345676843139, 12348641781151706039, 3630099227654990001, 3576615050016859099, 3091633523436759126, 3466405119720009246, 3636290270287111915, 12987448940296713157, 12870214741329260192, 2793688528249171523, 3044769129112284493, 3177888775998222529, 12207906161245270203, 3430531282983268850, 3450659176894312510, 3747048498456342990, 12237160136847503441, 12566366283505937877, 3644022951141585671, 3609126075381295664, 3536789087332769965, 3660215351444876465, 12971952891612410231, 3503995601158549636, 3684843598018752881, 12704704525928017961, 3732966767415372476, 3590116949555491546, 12656575311323082814, 3271919875895898241, 12971969641880955450, 3201551069441208015, 3608845530415936099, 12881335618588978221, 3463457741381906960, 3540014036494462591, 12777180299453375946, 3764924581626917498, 12239710832160906385, 12821925002456608750, 3317096257444721136, 12719770820226489722, 12500079602745977567, 3262351599045915345, 12261512300899906209, 3408433339069314105, 3458676768447671435, 3716605050873131728, 3242640841116201580, 12839396151814532766, 3596177247272807445, 3689630525634294646, 3228280585748624029, 12271087979876034946, 12601259574837030151, 12682330170384625560, 12139642941006752578, 12185379197244515154 });
            input = Layer(20, input, new ulong[105] { 3691317640684778498, 3505537462318147631, 12043378123173205779, 13048248892364108858, 12980695810732304909, 3770275277837901375, 13055427762459093909, 12735672167831745590, 12984213932335312491, 3838954678293638779, 3492597172460335518, 3655571458869507290, 11715468283727229479, 3432209925787399467, 12815896635760518708, 12814058559433484679, 12867265660111073353, 13052053191899952200, 12758193947581329739, 3776468073077093510, 3892280257589523568, 3759015462796834192, 3888034072604488381, 3317661743594418889, 12775640744589243815, 3020406833744655113, 3831070460514055362, 12773104753446663195, 3871446380788658571, 12431119440501650728, 12887530947752733968, 3588982498591977813, 12681346082051044260, 3846124584756622112, 3801794829507668715, 3687501933708522760, 12975773846886691732, 12393534050675763481, 3050542334393889642, 3521018996212281554, 2847600559694522882, 3870339799571444455, 3249399927915979144, 13040928135796993324, 12982662538552093973, 3471484655213753527, 3576883167559988231, 3745778942482952344, 13094409210323807437, 11621597817817442696, 12180886120428451311, 12745809235428717962, 12078409997987427824, 3790962170414412272, 3784767294168215963, 3500050882063316242, 3764783004727391038, 12767480244688269736, 12126556506468070726, 13054585603437507932, 12914974276927500820, 12931431633997244546, 12979141949639628669, 2733456271657742459, 12317956761117140510, 12724275506377635028, 13043187335877899004, 3874832109659365754, 12780144071673360040, 12772126349140897905, 12690358218465523126, 3817982383056531554, 12518796192201159407, 12923547940140660133, 12531886569632837964, 12949873495522718187, 12264203832422053376, 3793353801430742238, 12717085664674493277, 3838946560771044428, 3760547421805031977, 10849230397737938531, 13125236593427985131, 3874979145841684910, 3662039681725871200, 3790950773542560614, 11826791711989150117, 12804919180311639260, 12642221739007521546, 12973516420795970836, 12674589978222044856, 12162447063517081455, 12109957076228059890, 12911455917195211964, 13113260030038028874, 13102427645585137865, 13085266665890231455, 3863862329562963553, 3826984054609484101, 3584218374566687492, 12452787245580427494, 12689642597265681237, 12222251695275814386, 12440231376903644546, 12593371124229582855 });
            input = Layer(20, input, new ulong[105] { 3749842179313809931, 3028442060455456438, 3666258769924633809, 11154770243664523514, 12467283511936887453, 3342150850470034634, 3757317595574742123, 3633466449618678844, 12689232191877592589, 12972808640235057417, 3093181496060558490, 12965491841269281480, 3877212099454841678, 3466985444972736760, 3783221780357983583, 3707772104902162810, 12397059851783615830, 12794503710770770011, 3891169540598050322, 3402524131995629096, 1732804990184961250, 12982246061736932840, 2398507206384169004, 12806042930664090863, 3336380555468712727, 1314263869658447600, 12933128034318888487, 3581964749546533144, 3511036551570503178, 2625093961498801386, 3675972141292598471, 3837261829822920236, 12297833353226925243, 12234362934332568702, 3805599135406404257, 13125226702302723364, 3673302947963121752, 3588722579933017168, 12814616864329381190, 2662384570470839566, 12407476222814561462, 12312333903619730325, 3803770505912792226, 3761266918863778839, 3477119413870409142, 3886663722502666588, 12988299964417258967, 11621598240687666175, 13078063279827365908, 3805037843406139908, 3198879217402527102, 3800530601573069764, 12977295130653633594, 3497238475192838404, 12234367854266463013, 3731141551993666988, 3809535792856347580, 13010240051148699056, 2858014788061114630, 13082444618920636600, 3246732544889830048, 3208309136152632774, 12132469542584038616, 3664154489156941316, 13017143120172231227, 13044733805423507902, 13086955732499051528, 3475147403312312623, 3838955064778503559, 2894464360960241708, 13009408816059167907, 3221387088002069464, 12893436590191981262, 3502161209799094505, 3864276751018174971, 12687817562789486832, 3640091007231145114, 13082438627514496444, 3464021915243687758, 3454731937610315255, 1542812479784467326, 12969576054340531326, 3487108960199292283, 12401424253549718624, 3699625015574865727, 13062603319372953922, 3160037315705120910, 1204065642956599990, 3800531039514372868, 3374375326478840713, 3617149729291614877, 3797297410400104925, 3836552438533106855, 12567205131556924011, 13018838859189891213, 13034598066981714862, 12881760019378877778, 12688526921658610353, 12689931397389070466, 3546924935421015258, 11296055930961609856, 11815373781990682643, 2879525272722746164, 12162439564411056144, 2951726460260230891 });
            input = Layer(1, input, new ulong[6] { 13031367469762258371, 3962086286135703519, 3863581844708537966, 4046402558600164582, 3876663120979015484, 9063 });
            Console.WriteLine(input[0]);

            PrintWeights(new ulong[6] { 13031367469762258371, 3962086286135703519, 3863581844708537966, 4046402558600164582, 3876663120979015484, 9063 });

            evaluations[moveIndex++] = input[0];
            board.UndoMove(move);
        }

        Console.WriteLine(evaluations.Min());
        return moves[Array.IndexOf(evaluations, evaluations.Min())];
    }

    double[] Layer(int outputLength, double[] input, ulong[] rawWeights)
    {
        double[] output = new double[outputLength + 1];

        for (int i = 0; i < input.Length; i++)
        {
            for (int j = 0; j < outputLength; j++)
            {
                int weightIndex = i * outputLength + j;
                output[j] += (double)BitConverter.ToHalf(BitConverter.GetBytes(rawWeights[weightIndex / 4]), weightIndex % 4 * 2) * input[i];
            }
        }

        for (int i = 0; i < output.Length; i++)
            output[i] = outputLength == 1 ? Math.Tanh(output[i]) : Math.Max(0, output[i]);

        output[outputLength] = 1;
        return output;
    }

    void PrintWeights(ulong[] rawWeights)
    {
        for (int i = 0; i < rawWeights.Length; i++)
        {
            ulong rawWeight = rawWeights[i];
            for (int j = 0; j < 4; j++)
            {
                Half weight = BitConverter.ToHalf(BitConverter.GetBytes(rawWeight), j * 2);
                Console.WriteLine((i * 4 + j) + ": " + weight);
            }
        }
    }
}