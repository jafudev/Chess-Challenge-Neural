using System;
// using System.Data;
// using System.Linq;
// using System.Runtime.InteropServices;
using ChessChallenge.API;
// using ChessChallenge.Application;
// using Microsoft.CodeAnalysis;
// using System.Numerics;
// using System.Collections.Generic;

public class MyBot : IChessBot
{
    Move bestMoveSearch = Move.NullMove;
    int maxDepth = 3;

    public Move Think(Board board, Timer timer)
    {
        // Console.WriteLine(negaMax(3, 3, board, -2, 2, ref best_move)); // get next move and print evaluation for that move
        NegaMaxAlphBeta(maxDepth, board, -1, 1);
        return bestMoveSearch;
    }

    double NegaMaxAlphBeta(int depth, Board board, double alpha, double beta)
    {
        double max = alpha;
        Move[] moves = board.GetLegalMoves();
        if (depth == 0 || moves.Length == 0) return -EvaluateMove(board); // why is this minus needed here?

        foreach (var move in moves)
        {
            board.MakeMove(move);
            double score = -NegaMaxAlphBeta(depth - 1, board, -beta, -max);
            board.UndoMove(move);
            if (score > max) {
                max = score;
                if (depth == maxDepth) bestMoveSearch = move;
                if (max >= beta) break;
            }
        }
        return max;
    }

    double EvaluateMove(Board board)
    {
        // Evaluate a move from the perspective of the playe who played that move

        // preprocess positon for input to the neural network
        double[] input = new double[65];
        for (int i = 0; i < 64; i++)
        {
            var piece = board.GetPiece(new Square(i));
            var pieceType = piece.PieceType;
            if (pieceType != PieceType.None)
            {
                // Black pieces get converted to negative score
                int pieceVal = piece.IsWhite ? (int) pieceType : - (int) pieceType;
                // Always flip the board to be blacks turn, but whites perspective
                input[board.IsWhiteToMove ? 63 - i : i] = board.IsWhiteToMove ? -pieceVal : pieceVal;
            }
        }
        // neural network
        input[64] = 1;

        input = Layer(20, input, new ulong[325] { 3013796990555596512, 9808036649881086460, 2851519534788880416, 12413223108406161185, 3174509673959826593, 2660119312142903572, 10450225545893292894, 2359502645569758854, 12513016626274970943, 3178598929510344995, 2172328348528944484, 2679545554601879242, 2658714518668221856, 12112185919054687622, 2960738233810070323, 1824707609164457844, 2626209508259866144, 2839145514966624425, 11853649735893200282, 3145378242225580011, 2435792278970639516, 2110123394718278243, 2873196595477555700, 2773551481627486395, 3155938536021697358, 2767367336331877480, 11022736465886158420, 2911755824067681188, 11928527684630293837, 3033773306561108726, 2164725588816241069, 2617334611178727527, 2624377045368581074, 12216198585565654258, 2793534929299843178, 11006422809532771059, 11632692654493868398, 11131679318479544476, 12285301972217833235, 3189416848312833303, 11341797300470949693, 2517411793326418799, 2927523078496496105, 12334692846216555914, 3188021209379350547, 2705729588463674648, 2359219892870556452, 2904721067035109601, 12236321243432955425, 3178311885954459791, 2599606729663588163, 2059165347144772833, 2648023285926079773, 12492035992471219666, 3204625838547183290, 2645769712554878262, 2375831567934663713, 2801149275031907075, 2870518627104730544, 3151152546552388065, 2768774225915815038, 2614808204019310593, 2772139231970793831, 2551041436621876445, 3141862038387171682, 2659844530931639745, 2623533631954985691, 2737495574801033563, 3063467250208812100, 3162538659491422438, 2508131661709714662, 2328831401539313372, 2500513641731695626, 12575346280449911841, 3180278356173137130, 2167257841319780591, 2598759852575597891, 2983541623972800358, 12610537511687826622, 2985073295033443277, 2651675011224381735, 2640557452108344685, 2736683155922136112, 2450263001129299170, 2931174898025736498, 2635912560799130640, 11219206459179901455, 2731894138566059886, 12270663645643681177, 3189570026165606805, 2755825747498772561, 2426068052360474048, 2621003460150041924, 12173822664371220304, 3135668633238020925, 2596233286325511817, 2778064837263404545, 2787074267293263290, 11741198769086278590, 3189428217064038533, 2674189236324606833, 2337836470454562676, 2764830387251620068, 2688124796869881004, 3145237002230472124, 2637889388264825492, 11842972153073213285, 2921330796320631036, 12185929799247015057, 3195628040921097385, 2747916683584216734, 10388869021763805538, 2125603833323825797, 12166783814265679180, 3165482975461547608, 2391034218806714772, 2385131881511360553, 2830984145008567996, 12533409867704183696, 2993508868527727369, 2731891314445461915, 2752586395495869506, 2907540463906498919, 11144481924531170838, 2995775136009198937, 2721336286267450087, 2781713566615513302, 2644079696730368326, 12035346356032712037, 3155094205496928267, 2398912339835365031, 2312353171080457253, 2986069087589704868, 2437049151995063551, 3120758188234024732, 2432975012448183390, 2534863508154655048, 2912312941397908045, 11973985962167315918, 3170853172561225240, 2871230082310744500, 2235942232554187415, 2753571085327144680, 12003811580880891138, 3120464803334788566, 2827730412919661774, 2987758790094791709, 2813247055334188972, 12241104435153218550, 3076280868397491559, 2168106363642418003, 1921535095858765465, 1960371944591699852, 12351995122032126995, 3210544836046529898, 2855469188772996296, 2493491668727179700, 2723456520283466220, 11768502425895644376, 3024203097242444241, 2922454714097804493, 2720635317728291340, 3034484157964459924, 2321373540801326366, 3207566542527113219, 11420748512474769685, 3066979431763912810, 3074734014403553497, 12209023344388025719, 3172546689132832173, 2494053357914236419, 2942440631622869575, 2960453885446168856, 11895592397975203032, 3204637443600525767, 12145830801176924540, 2805643569618197866, 3067974341553203262, 11967093450200657094, 3177326038507564313, 2831819642863690817, 2643233972655072703, 2976214882107238107, 11978917203096906752, 3202651184367708635, 2477728494405787033, 2751036711178577676, 2482231224340358489, 12099528053778164647, 3179580436863035476, 2795790399133788402, 2939341666685526279, 11471695824630622400, 12189598474383470089, 3057424939829340522, 11559517548605220315, 2752448673082350640, 12108109269483825041, 11859249441215949924, 3293575543252429075, 12248288019150612964, 2975369961000903955, 3201536524354298248, 11863659350504910756, 3095428094634535115, 1508611661418863058, 2992253391732778123, 2916547474157568313, 11689141763988925188, 3338338980922828859, 11665917585141868251, 2981564549586397209, 3288648511396882450, 11808479732369533945, 3101751493403650813, 2838297080526478937, 3430234210776425015, 3070511284250781263, 11766387214666508935, 3206044440484685939, 11988763284553804049, 3259659713465919341, 2716700145873626285, 11999605046928550922, 2969607676244372622, 12266017515169162740, 2922453296982304285, 11637204395118274599, 11703487002009414360, 3110063504957156829, 11813408402786362717, 2788753331559046634, 12260110537257886913, 12155257333190372474, 3201541257420450829, 2451681244500436462, 2234249074783266058, 2922177527684833789, 2346136213442080200, 2599466028894169392, 2432975871588182203, 11453540269908666315, 2659260615066363282, 12062658091712916630, 3351852511387428649, 11983985983839609698, 2715555397908407690, 3620938543237015902, 12260804672774351149, 3194790487873070286, 3228985211581604879, 3560415468399601713, 2972407969055548522, 11619611414614648855, 2986771770004121845, 3252910932191747168, 2404654925986570098, 2864753166434741304, 11854926432109014270, 12015934658585274876, 2658972096038906859, 2179640472635874615, 2515726072186709935, 11961046260738501702, 2847735294890387911, 2387937104975572562, 3368020733280067548, 2606644619892926698, 11709400678035368976, 3202385871369055754, 2742591160448722293, 12220135436272509270, 3139758616736868690, 12003821592395918855, 3226032616985308365, 11633258043937399436, 2837726030413108736, 2354726044644383974, 11425241544372202721, 2716284041214796818, 3455568723763406853, 2283501135375574432, 2563019219850761643, 11604136922339879956, 3281201411741756600, 3058974411545782957, 2562026796899018997, 2616354832330829014, 12141744734771710265, 3179026514843904722, 3123996737360633645, 2694168762896656226, 2546814638952262055, 11713200164941015161, 3275011260102519871, 2850122100493067455, 2670254943341749524, 2927800378676060772, 11548672874308709938, 11997074074092088305, 2778343421559482683, 11425249865854854857, 2585250477291513522, 11626927569277431341, 2942588208790482338, 2389200718745249965, 2280130556797560588, 2817464850622030777, 11279708875366608283, 3153695132801870859, 2801693032908073051, 2957638631108323198, 2635355428298431026, 11481111887636016454, 2900648836715818376, 2315881907474866258, 2865574727241731160, 10965883290043851832, 12199308094080525952, 3226596473201011011, 3289937566532907157, 3376061582283322405, 3566063913162060179, 3559581811080967972, 3901025590731093596 });
        input = Layer(20, input, new ulong[105] { 12569828035557949440, 9223542010185557225, 11205378085362863643, 2865156139651869295, 11260265706427131621, 12323396693602828288, 9223519128747287052, 12335500119003633412, 3331442639969167746, 2976597879462046857, 3396558546810732544, 9223533703718772380, 3172926677118361086, 12344694592403942230, 11831800648876731326, 12407698449098342400, 9223388572478907521, 12227695200775967634, 3219414164663216311, 2955065043715172747, 3366862936801869824, 8426725842947, 3243858371249446692, 12471641572009454477, 11998433835124500482, 12974026102355820544, 9223545289393089579, 12692128912348583508, 3634596245142024156, 3029374437680230456, 3212333174602858496, 6560562552152, 3255680318123810463, 12538914271816330279, 12110742350846471140, 12221362014544265216, 9223388100032503169, 12380395377788982709, 3335102068104472753, 3113676193119546717, 2938035809458651136, 172741437202425, 2858237653155879027, 1253165408552234432, 12499037081001045961, 3653967413052178432, 9223381850855057511, 3266376367238815698, 12502322645026352485, 12279064386911447924, 3332663727110619136, 9223390453674549665, 3191363288092908693, 12419848866447369913, 12219391691821788307, 12193214516875558912, 160174362895557, 12372091863828534625, 3334820752014813683, 3060899634988264559, 13055935320542085120, 172939005701363, 12593190458034788613, 3575766218310525698, 3250613769346232063, 3563895420427665408, 174564650788045, 3408943442942761371, 12615759053846621621, 12419098187781615936, 12339018554795556864, 15786152336883, 12334233481608468168, 3250659450442328631, 3138868203522108197, 3469319828306952192, 9223386697725650066, 3189955913209355330, 12435611379223440330, 12221362016662564062, 2553118779088863232, 9223551983099619780, 2470646610225308149, 11561916285777128420, 12663699942493368645, 3389803147381702656, 17918603568429, 3216414561020157352, 12424071476457712371, 12319596783529996195, 3184889362246369280, 23961622552624, 12373639978347929052, 3452758363641617845, 3240058457683734759, 12861154636618563584, 9223543502686694130, 12325085544865370136, 3428269452223688200, 3257087693763063761, 3862564321765654580, 12428302980900925498, 3883693986735472682, 3713273861279002850, 3634026775484969729 });
        input = Layer(20, input, new ulong[105] { 9223512774343131136, 0, 140737488355328, 140737488355328, 140737488388096, 3552403797472739328, 52349845283555, 9223560767095832576, 12142452828763958452, 140740354321463, 9223372039002292224, 2147483648, 9223512774343131136, 9223372036854775808, 2147516416, 12987028523199397888, 195958588122635, 53509682823168, 3275292337847087645, 804958032, 12257716082304483328, 185182349040713, 9223414310740688896, 2551608988457838658, 629122313, 9223512774343131136, 2147483648, 9223372036854775808, 9223512776490647552, 140739635871744, 2897822471183859712, 9223413270737031811, 9223407230428381184, 2028616296724439907, 9223512774830595412, 9223372039002259456, 9223512774343131136, 9223372039002259456, 2147483648, 9223372039002259456, 3337213383899283456, 9223418543198411331, 44543817711616, 2521488283995744964, 140738130880033, 9223512776490647552, 9223372036854808576, 140737488355328, 9223512776490647552, 9223372039002259456, 140737488355328, 9223372039002292224, 140739635838976, 9223512776490614784, 140739635838976, 12684438907383480320, 9223563318158172657, 49382148636672, 3005353630344425092, 9223512775084256093, 12657697745195139072, 190903331135752, 48557509214208, 2940895018851380599, 9223512775066430091, 3538048934453837824, 9223424133291745817, 9223561175113039872, 12155400699167812893, 140740357794853, 12521744751624814592, 9223561651681173536, 9223419619384623104, 2880939796528049399, 9223512775049980256, 3722135291515437056, 54338455184656, 9223562759993458688, 12290510852684820158, 9223372039755279880, 3704121361173315584, 9223426332358583473, 9223563060640448512, 12304021767532687164, 9223372039758163473, 3558314969552912384, 9223424738890982181, 189026597044224, 12154837903835507943, 2869963866, 9223372036854775808, 9223372039002259456, 9223372039002259456, 32768, 9223372039002259456, 3494982537146040320, 51194487677431, 9223560041229418496, 12116556649862769761, 140740343507824, 3616447427155897173, 9689268537776156030, 9268745695695777021, 3506669403041117175, 12557303163863249037 });
        input = Layer(1, input, new ulong[6] { 4074549216687194112, 9223432040455121231, 9223570035752370176, 12736373701295060310, 9223512777346134869, 43706 }); 
        
        return input[0];
    }

    double[] Layer(int outputLength, double[] input, ulong[] rawWeights)
    {
        double[] output = new double[outputLength + 1];

        for (int i = 0; i < input.Length; i++)
        {
            for (int j = 0; j < outputLength; j++)
            {
                int weightIndex = i * outputLength + j;
                output[j] += (double) BitConverter.ToHalf(BitConverter.GetBytes(rawWeights[weightIndex / 4]), weightIndex % 4 * 2) * input[i];
            }
        }

        for (int i = 0; i < output.Length; i++)
            output[i] = outputLength == 1 ? Math.Tanh(output[i]) : Math.Max(0, output[i]);

        output[outputLength] = 1;
        return output;
    }
}